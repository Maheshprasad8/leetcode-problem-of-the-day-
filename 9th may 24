9th may 24(leetcode)
3075. Maximize Happiness of Selected Children
class Solution {
public:
    long long maximumHappinessSum(vector<int>& happiness, int k) {
        int n=happiness.size();
        sort(happiness.begin(),hap
piness.end(),greater<int>());
       long long sum=0;
       int i=0;
    while(k--) {
            happiness[i] = max(happiness[i] - i, 0);
            sum += happiness[i++];
        }

       // return res;
     return sum;
    }
};

Q.Divisor Game
//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    bool divisorGame(int n) {
        int count1=0;
        int count2=0;
     for(int i=0;i<n;i++){
         if(n%2==0){
            return true;
         }
        
     }   
     return false;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;

        Solution obj;
        bool ans = obj.divisorGame(n);
        if (ans)
            cout << "True" << endl;
        else
            cout << "False" << endl;
    }
    return 0;
}
// } Driver Code Ends
